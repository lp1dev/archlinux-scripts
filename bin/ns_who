#!/usr/bin/perl

use	Socket;
use	IO::Socket;
use	Net::hostent;
use	Getopt::Std;

$SERVER		= "ns-server.epitech.eu";
$PORT		= 4242;
$LIST_CMD	= "list_users";
$EXIT_CMD	= "exit\n";

getopts('hatgsdunlA',\%opts);
$param = $opts{d} ? "*$ARGV[0]" : "$ARGV[0]" if ($#ARGV>=0);
&ns_connect($SERVER,$PORT);
ns_list_users();
print $sd "exit\n";

foreach $user (@user_list)
{
    ($num,$login,$ip,$login_time,$idle,$auth_user,$auth_ag,$mach_func,
     $mach_loc,$group,$state,$user_data)
	= split(/\s+/,$user);
    if ( ( !$opts{l} || ( $ip =~ /^10\..*/ ) || ( $ip =~ /^172\.16\..*/ ) || ( $ip =~ /^172\.17\..*/ ) || ( $ip =~ /^172\.18\..*/ ) || ( $ip =~ /^172\.19\..*/ ) || ( $ip =~ /^172\.20\..*/ ) || ( $ip =~ /^172\.21\..*/ ) || ( $ip =~ /^172\.22\..*/ ) ||
	   ( $ip =~ /163\.5\..*/ ) ) &&
	 ( !$opts{A} || ( $state =~ /actif.*/))
	 )
    {
	if (($auth_user < 2) && ($auth_ag < 2))
	{
	    $login = "~".$login;
	}
	$mach_loc = do_loc().url_decode($mach_loc) if ( $mach_func  =~ /^~.*/);
	printf("%-25.25s ",url_decode($login)."@".url_decode($mach_loc));
	if ($opts{h})
	{
	    mk_host();
	    printf("%-16s ",$machine);
	}
	printf("%-16.16s ",url_decode($group))	if ($opts{g});
	show_state() if ($opts{s});
	printf("%-10s ",url_decode($user_data))	if ($opts{u});
	printf("%-13.14s ",mk_date_str($login_time)) if($opts{t});
	printf("%s/%s",&process_auth_ag($auth_ag),&process_auth_user($auth_user))if ($opts{a});
	printf("\n");
    }
}

sub show_state()
{
    my	($s,$d,$tmp);

    $tmp = url_decode($state);
    $d = 0;
    ($s,$d) = split(/:/,$tmp);
    if ($d != 0)
    {
	$d = $connect_date-$d;
	$time = sprintf(" %dh%02dm",$d/3600,($d%3600)/60);
    }
    printf("%-16.16s ",$s.$time);
}

##
##
##
sub     ns_connect()
{
    my $hello_string,$d;

    ($server,$port) = @_;
    while (!($sd = IO::Socket::INET->new(
                                         Proto    => "tcp",
                                         PeerAddr => $server,
                                         PeerPort => $port,
                                         Timeout => 3,
                                         )))
    {
        print "Cannot Connect ($server:$port) : $!\n";
	exit(255);
    }
    $hello_string = <$sd>;
    $sd->autoflush(1);
    chomp($hello_string);
    ($d,$d,$d,$d,$d,$connect_date) = split(/ /,$hello_string);
}

sub             ns_list_users()
{
    print $sd "list_users $param \n";
    while ($line = <$sd>)
    {
        if ($line =~ m/cmd end/)
        {
            return ;
        }
        chomp ($line);
        push @user_list,$line;
    }
}

sub	mk_date_str()
{
    my @day = ("dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi");
    my $login_time = $_[0];
    my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst);
    my ($n_sec,$n_min,$n_hour,$n_mday,$n_mon,$n_year,$n_wday,$n_yday,$n_isdst);
    my $date = sprintf("%d jours",(time() - $login_time)/(24*3600));

    ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = gmtime($login_time);
    ($n_sec,$n_min,$n_hour,$n_mday,$n_mon,$n_year,$n_wday,$n_yday,$n_isdst) = gmtime(time());
    if ( $mday != $n_mday || $mon != $n_mon )
    {
	if (((time()-$login_time)/(24*60*60))<=7)
	{
	    $date = sprintf("%s %02d:%02d",$day[$wday],$hour,$min);
	}
	else
	{
	    $date = sprintf("%d jours",((time()-$login_time)/(24*60*60)));
	}
    }
    else
    {
	    $date = sprintf("%02d:%02d %dh%02dm",$hour,$min,
			    (time()-$login_time)/3600,((time()-$login_time)%3600)/60);
    }
    return ($date);
}


sub		process_auth_ag()
{
    $auth_ag = $_[0];

    if ( $auth_ag > 1)
    {
	return (sprintf("%d:trusted",$auth_ag));
    }
    return (sprintf("%d:weak",$auth_ag));
}

sub		process_auth_user()
{
    $auth_user = $_[0];

    if ( $auth_user > 1)
    {
	return (sprintf("%d:trusted",$auth_user));
    }
    return (sprintf("%d:weak",$auth_user));
}

sub		mk_host()
{
    if ( !($opts{n}) && ($h = gethost($ip)))
    {
	$machine = $h->name;
    }
    else
    {
	$machine = $ip;
    }
    $pos = rindex($machine,".epita.fr");
    if ( $pos != -1)
    {
	$machine = substr($machine,0,$pos);
    }
}

# unescape URL-encoded data
sub url_decode
{
    my($todecode) = @_;

    $todecode =~ tr/+/ /;
    $todecode =~ s/%([0-9a-fA-F]{2})/pack("c",hex($1))/ge;
    return ($todecode);
}

sub	do_loc()
{
    return ("bocal:") if ( $ip =~ /10\.242\..*/ );
    return ("ip20:") if ( $ip =~ /10\.246\..*/ );
    return ("pasteur:") if ( $ip =~ /10\.247\..*/ );
    return ("sr:") if ( $ip =~ /10\.248\..*/ );
    return ("midlab:") if ( $ip =~ /10\.249\..*/ );
    return ("cisco:") if ( $ip =~ /10\.250\..*/ );
    return ("astek:") if ( $ip =~ /10\.252\..*/ );
    return ("labtech:") if ( $ip =~ /10\.253\..*/ );
    return ("wireless:") if ( $ip =~ /10\.142\..*/ );
    return ("lse:") if ( $ip =~ /10\.227\.42\..*/ );
    return ("lrde:") if ( $ip =~ /62\.139\..*/ );
    return ("lab-console:") if ( $ip =~ /10\.226\.1\..*/ );
    return ("lab-scia:") if ( $ip =~ /10\.226\.2\..*/ );
    return ("lab-srs:") if ( $ip =~ /10\.226\.3\..*/ );
    return ("lab-telecom:") if ( $ip =~ /10\.226\.4\..*/ );
    return ("lab-mma:") if ( $ip =~ /10\.226\.5\..*/ );
    return ("lab-acu:") if ( $ip =~ /10\.226\.6\..*/ );
    return ("lab-gistr:") if ( $ip =~ /10\.226\.7\..*/ );
    return ("lab-sigl:") if ( $ip =~ /10\.226\.8\..*/ );
    return ("adm:") if ( $ip =~ /10\.1\..*/ );
    return ("vpn:") if ( $ip =~ /10\.10\..*/ );
    return ("vpn-adm:") if ( $ip =~ /10\.11\..*/ );
    return ("sm:") if ( $ip =~ /10\.42\..*/ );
    return ("assos:") if ( $ip =~ /10\.225\..*/ );
    return ("s-serv:") if ( $ip =~ /10\.42\.1\..*/ );
    return ("senegal:") if ( $ip =~ /172\.16\..*/ );
    return ("adm-ivry:") if ( $ip =~ /172\.17\.1\..*/ );
    return ("ivry:") if ( $ip =~ /172\.17\.142\..*/ );
    return ("adm-bordeaux:") if ( $ip =~ /172\.18\.1\..*/ );
    return ("bordeaux:") if ( $ip =~ /172\.18\.142\..*/ );
    return ("adm-lille:") if ( $ip =~ /172\.19\.1\..*/ );
    return ("lille:") if ( $ip =~ /172\.19\.142\..*/ );
    return ("adm-lyon:") if ( $ip =~ /172\.20\.1\..*/ );
    return ("lyon:") if ( $ip =~ /172\.20\.142\..*/ );
    return ("adm-nantes:") if ( $ip =~ /172\.21\.1\..*/ );
    return ("nantes:") if ( $ip =~ /172\.21\.142\..*/ );
    return ("adm-strasbourg:") if ( $ip =~ /172\.22\.1\..*/ );
    return ("strasbourg:") if ( $ip =~ /172\.22\.142\..*/ );
    return ("adm-toulouse:") if ( $ip =~ /172\.23\.1\..*/ );
    return ("toulouse:") if ( $ip =~ /172\.23\.142\..*/ );
    return ($mach_func);
}
